using Microsoft.VisualStudio.TestTools.UnitTesting;
using T4TS.Tests.Utils;

namespace T4TS.Tests.Fixtures.BasicInterface
{
    [TestClass]
    public class Test
    {
        [TestMethod]
        public void IBasicHasExpectedOutputDirect()
        {
            // Expect
            new OutputForDirectBuilder(
                typeof(IBasic)
            ).ToEqual(ExpectedOutputDirect);
        }

        [TestMethod]
        public void IBasicHasExpectedOutputNamespaceMap()
        {
            // Expect
            new OutputForDirectBuilder(
                typeof(IBasic))
                .WithSettings((setting) =>
                    setting.NamespaceToModuleMap.Add(
                        typeof(IBasic).Namespace,
                        "Bar"))
                .ToEqual(ExpectedOutputDirectMapped);
        }
        
        const string ExpectedOutputDirect =
@"/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

declare module T4TS.Tests.Fixtures.BasicInterface {
    /** Generated from T4TS.Tests.Fixtures.BasicInterface.IBasic **/
    export interface IBasic {
        MyProperty: number;
        SomeDateTime: string;
    }
}";

        const string ExpectedOutputDirectMapped =
@"/****************************************************************************
  Generated by T4TS.tt - don't make any changes in this file
****************************************************************************/

declare module Bar {
    /** Generated from T4TS.Tests.Fixtures.BasicInterface.IBasic **/
    export interface IBasic {
        MyProperty: number;
        SomeDateTime: string;
    }
}";
    }
}
